// using System;
// using System.Collections.Generic;

// namespace Ecommerce2
// {
//     public enum ProductCategory
//     {
//         Electronics,
//         Clothing,
//         Books,
//         HomeGarden
//     }

//     public abstract class Product
//     {
//         public string Id { get; set; }
//         public string Name { get; set; }
//         public decimal Price { get; set; }
//         public ProductCategory Category { get; set; }
//         public int Stock { get; set; }

//         public abstract string GetProductDetails();
//     }

//     public class Electronics : Product
//     {
//         public int WarrantyMonths { get; set; }
//         public string Brand { get; set; }

//         public override string GetProductDetails()
//         {
//             return $"Electronics: {Name} - ${Price} | Brand: {Brand} | Warranty: {WarrantyMonths} months | Stock: {Stock}";
//         }
//     }

//     public class Clothing : Product
//     {
//         public string Size { get; set; }
//         public string Color { get; set; }
//         public string Material { get; set; }

//         public override string GetProductDetails()
//         {
//             return $"Clothing: {Name} - ${Price} | Size: {Size} | Color: {Color} | Material: {Material} | Stock: {Stock}";
//         }
//     }

//     public class Books : Product
//     {
//         public string ISBN { get; set; }
//         public string Author { get; set; }
//         public int Pages { get; set; }

//         public override string GetProductDetails()
//         {
//             return $"Book: {Name} - ${Price} | Author: {Author} | ISBN: {ISBN} | Pages: {Pages} | Stock: {Stock}";
//         }
//     }

//     public class HomeGarden : Product
//     {
//         public string Type { get; set; }
//         public string Dimensions { get; set; }
//         public bool IsOutdoor { get; set; }

//         public override string GetProductDetails()
//         {
//             return $"Home & Garden: {Name} - ${Price} | Type: {Type} | Dimensions: {Dimensions} | Outdoor: {IsOutdoor} | Stock: {Stock}";
//         }
//     }

//     public static class ProductFactory
//     {
//         private static int nextId = 1;

//         public static Product CreateProduct(ProductCategory category, string name, decimal price, int stock)
//         {
//             Product product = null;
//             string id = nextId.ToString();
//             nextId++;

//             switch (category)
//             {
//                 case ProductCategory.Electronics:
//                     product = new Electronics
//                     {
//                         Id = id,
//                         Name = name,
//                         Price = price,
//                         Category = category,
//                         Stock = stock,
//                         WarrantyMonths = 12,
//                         Brand = "Default Brand"
//                     };
//                     break;
//                 case ProductCategory.Clothing:
//                     product = new Clothing
//                     {
//                         Id = id,
//                         Name = name,
//                         Price = price,
//                         Category = category,
//                         Stock = stock,
//                         Size = "M",
//                         Color = "Blue",
//                         Material = "Cotton"
//                     };
//                     break;
//                 case ProductCategory.Books:
//                     product = new Books
//                     {
//                         Id = id,
//                         Name = name,
//                         Price = price,
//                         Category = category,
//                         Stock = stock,
//                         ISBN = "978-0000000000",
//                         Author = "Unknown Author",
//                         Pages = 200
//                     };
//                     break;
//                 case ProductCategory.HomeGarden:
//                     product = new HomeGarden
//                     {
//                         Id = id,
//                         Name = name,
//                         Price = price,
//                         Category = category,
//                         Stock = stock,
//                         Type = "Decoration",
//                         Dimensions = "10x10x10",
//                         IsOutdoor = false
//                     };
//                     break;
//                 default:
//                     throw new ArgumentException("Invalid product category");
//             }

//             return product;
//         }
//     }

//     public interface IConfigurationManager
//     {
//         string GetSetting(string key);
//         void SetSetting(string key, string value);
//     }

//     public sealed class ConfigurationManager : IConfigurationManager
//     {
//         private static ConfigurationManager instance = null;
//         private static readonly object lockObject = new object();
//         private Dictionary<string, string> settings;

//         private ConfigurationManager()
//         {
//             settings = new Dictionary<string, string>();
//             InitializeDefaultSettings();
//         }

//         public static ConfigurationManager Instance
//         {
//             get
//             {
//                 if (instance == null)
//                 {
//                     lock (lockObject)
//                     {
//                         if (instance == null)
//                             instance = new ConfigurationManager();
//                     }
//                 }
//                 return instance;
//             }
//         }

//         private void InitializeDefaultSettings()
//         {
//             settings["DatabaseConnection"] = "localhost:1433";
//             settings["APIKey"] = "default-api-key";
//             settings["MaxOrderItems"] = "50";
//             settings["TaxRate"] = "0.08";
//         }

//         public string GetSetting(string key)
//         {
//             lock (lockObject)
//             {
//                 return settings.ContainsKey(key) ? settings[key] : null;
//             }
//         }

//         public void SetSetting(string key, string value)
//         {
//             lock (lockObject)
//             {
//                 settings[key] = value;
//             }
//         }
//     }

//     public interface ILogger
//     {
//         void LogInfo(string message);
//         void LogError(string message);
//         void LogWarning(string message);
//     }

//     public sealed class Logger : ILogger
//     {
//         private static Logger instance = null;
//         private static readonly object lockObject = new object();

//         private Logger() { }

//         public static Logger Instance
//         {
//             get
//             {
//                 if (instance == null)
//                 {
//                     lock (lockObject)
//                     {
//                         if (instance == null)
//                             instance = new Logger();
//                     }
//                 }
//                 return instance;
//             }
//         }

//         public void LogInfo(string message)
//         {
//             lock (lockObject)
//             {
//                 Console.WriteLine($"[INFO] {DateTime.Now:yyyy-MM-dd HH:mm:ss} - {message}");
//             }
//         }

//         public void LogError(string message)
//         {
//             lock (lockObject)
//             {
//                 Console.WriteLine($"[ERROR] {DateTime.Now:yyyy-MM-dd HH:mm:ss} - {message}");
//             }
//         }

//         public void LogWarning(string message)
//         {
//             lock (lockObject)
//             {
//                 Console.WriteLine($"[WARNING] {DateTime.Now:yyyy-MM-dd HH:mm:ss} - {message}");
//             }
//         }
//     }

//     public class PaymentResult
//     {
//         public bool IsSuccessful { get; set; }
//         public string Message { get; set; }
//         public string TransactionId { get; set; }
//     }

//     public interface IPaymentStrategy
//     {
//         PaymentResult ProcessPayment(decimal amount);
//         bool ValidatePaymentDetails();
//     }

//     public class CreditCardPayment : IPaymentStrategy
//     {
//         public string CardNumber { get; set; }
//         public string ExpiryDate { get; set; }
//         public string CVV { get; set; }
//         public string HolderName { get; set; }

//         public CreditCardPayment(string cardNumber, string expiryDate, string cvv, string holderName)
//         {
//             CardNumber = cardNumber;
//             ExpiryDate = expiryDate;
//             CVV = cvv;
//             HolderName = holderName;
//         }

//         public bool ValidatePaymentDetails()
//         {
//             if (CardNumber == null || CardNumber.Length != 16)
//                 return false;
//             if (CVV == null || CVV.Length != 3)
//                 return false;
//             if (ExpiryDate == null || ExpiryDate.Length != 5)
//                 return false;
//             return true;
//         }

//         public PaymentResult ProcessPayment(decimal amount)
//         {
//             if (!ValidatePaymentDetails())
//             {
//                 return new PaymentResult
//                 {
//                     IsSuccessful = false,
//                     Message = "Invalid credit card details"
//                 };
//             }

//             return new PaymentResult
//             {
//                 IsSuccessful = true,
//                 Message = $"Credit card payment of ${amount} processed successfully",
//                 TransactionId = "CC" + DateTime.Now.Ticks.ToString().Substring(10)
//             };
//         }
//     }

//     public class PayPalPayment : IPaymentStrategy
//     {
//         public string Email { get; set; }
//         public string Password { get; set; }

//         public PayPalPayment(string email, string password)
//         {
//             Email = email;
//             Password = password;
//         }

//         public bool ValidatePaymentDetails()
//         {
//             if (Email == null || !Email.Contains("@"))
//                 return false;
//             if (Password == null || Password.Length < 6)
//                 return false;
//             return true;
//         }

//         public PaymentResult ProcessPayment(decimal amount)
//         {
//             if (!ValidatePaymentDetails())
//             {
//                 return new PaymentResult
//                 {
//                     IsSuccessful = false,
//                     Message = "Invalid PayPal credentials"
//                 };
//             }

//             return new PaymentResult
//             {
//                 IsSuccessful = true,
//                 Message = $"PayPal payment of ${amount} processed successfully",
//                 TransactionId = "PP" + DateTime.Now.Ticks.ToString().Substring(10)
//             };
//         }
//     }

//     public class BankTransferPayment : IPaymentStrategy
//     {
//         public string RoutingNumber { get; set; }
//         public string AccountNumber { get; set; }
//         public string BankName { get; set; }

//         public BankTransferPayment(string routingNumber, string accountNumber, string bankName)
//         {
//             RoutingNumber = routingNumber;
//             AccountNumber = accountNumber;
//             BankName = bankName;
//         }

//         public bool ValidatePaymentDetails()
//         {
//             if (RoutingNumber == null || RoutingNumber.Length != 9)
//                 return false;
//             if (AccountNumber == null || AccountNumber.Length < 8)
//                 return false;
//             return true;
//         }

//         public PaymentResult ProcessPayment(decimal amount)
//         {
//             if (!ValidatePaymentDetails())
//             {
//                 return new PaymentResult
//                 {
//                     IsSuccessful = false,
//                     Message = "Invalid bank transfer details"
//                 };
//             }

//             return new PaymentResult
//             {
//                 IsSuccessful = true,
//                 Message = $"Bank transfer of ${amount} processed successfully",
//                 TransactionId = "BT" + DateTime.Now.Ticks.ToString().Substring(10)
//             };
//         }
//     }

//     public class CryptoPayment : IPaymentStrategy
//     {
//         public string WalletAddress { get; set; }
//         public string CryptoCurrency { get; set; }

//         public CryptoPayment(string walletAddress, string cryptoCurrency)
//         {
//             WalletAddress = walletAddress;
//             CryptoCurrency = cryptoCurrency;
//         }

//         public bool ValidatePaymentDetails()
//         {
//             if (WalletAddress == null || WalletAddress.Length < 26)
//                 return false;
//             if (CryptoCurrency == null)
//                 return false;
//             return true;
//         }

//         public PaymentResult ProcessPayment(decimal amount)
//         {
//             if (!ValidatePaymentDetails())
//             {
//                 return new PaymentResult
//                 {
//                     IsSuccessful = false,
//                     Message = "Invalid crypto wallet details"
//                 };
//             }

//             return new PaymentResult
//             {
//                 IsSuccessful = true,
//                 Message = $"Cryptocurrency payment of ${amount} processed successfully",
//                 TransactionId = "CR" + DateTime.Now.Ticks.ToString().Substring(10)
//             };
//         }
//     }

//     public class PaymentContext
//     {
//         private IPaymentStrategy paymentStrategy;

//         public void SetPaymentStrategy(IPaymentStrategy strategy)
//         {
//             paymentStrategy = strategy;
//         }

//         public PaymentResult ExecutePayment(decimal amount)
//         {
//             if (paymentStrategy == null)
//             {
//                 return new PaymentResult
//                 {
//                     IsSuccessful = false,
//                     Message = "No payment strategy selected"
//                 };
//             }

//             return paymentStrategy.ProcessPayment(amount);
//         }
//     }

//     public class OrderItem
//     {
//         public Product Product { get; set; }
//         public int Quantity { get; set; }
//         public decimal TotalPrice => Product.Price * Quantity;
//     }

//     public class Order
//     {
//         public string Id { get; set; }
//         public string CustomerId { get; set; }
//         public DateTime OrderDate { get; set; }
//         public List<OrderItem> Items { get; set; }
//         public decimal TotalAmount => CalculateTotal();
//         public string PaymentMethod { get; set; }
//         public string Status { get; set; }

//         public Order()
//         {
//             Items = new List<OrderItem>();
//             OrderDate = DateTime.Now;
//             Status = "Pending";
//         }

//         private decimal CalculateTotal()
//         {
//             decimal total = 0;
//             for (int i = 0; i < Items.Count; i++)
//             {
//                 total += Items[i].TotalPrice;
//             }
//             return total;
//         }
//     }

//     public class ECommerceSystem
//     {
//         private List<Product> products;
//         private List<Order> orders;
//         private PaymentContext paymentContext;
//         private ILogger logger;
//         private IConfigurationManager config;
//         private int nextOrderId;

//         public ECommerceSystem()
//         {
//             products = new List<Product>();
//             orders = new List<Order>();
//             paymentContext = new PaymentContext();
//             logger = Logger.Instance;
//             config = ConfigurationManager.Instance;
//             nextOrderId = 1;
//             InitializeSampleData();
//         }

//         private void InitializeSampleData()
//         {
//             products.Add(ProductFactory.CreateProduct(ProductCategory.Electronics, "Smartphone", 599.99m, 10));
//             products.Add(ProductFactory.CreateProduct(ProductCategory.Clothing, "T-Shirt", 29.99m, 25));
//             products.Add(ProductFactory.CreateProduct(ProductCategory.Books, "Programming Guide", 49.99m, 15));
//             products.Add(ProductFactory.CreateProduct(ProductCategory.HomeGarden, "Garden Tool", 19.99m, 8));
//         }

//         public void ViewProducts()
//         {
//             Console.WriteLine("\n=== Product Catalog ===");
//             if (products.Count == 0)
//             {
//                 Console.WriteLine("No products available.");
//                 return;
//             }

//             for (int i = 0; i < products.Count; i++)
//             {
//                 Console.WriteLine($"{i + 1}. {products[i].GetProductDetails()}");
//             }
//         }

//         public void AddNewProduct()
//         {
//             Console.WriteLine("\n=== Add New Product ===");
//             Console.Write("Enter product name: ");
//             string name = Console.ReadLine();

//             Console.Write("Enter price: $");
//             decimal price;
//             while (!decimal.TryParse(Console.ReadLine(), out price) || price <= 0)
//             {
//                 Console.Write("Invalid price. Enter a valid price: $");
//             }

//             Console.Write("Enter stock quantity: ");
//             int stock;
//             while (!int.TryParse(Console.ReadLine(), out stock) || stock < 0)
//             {
//                 Console.Write("Invalid quantity. Enter a valid stock quantity: ");
//             }

//             Console.WriteLine("Select category:");
//             Console.WriteLine("1. Electronics");
//             Console.WriteLine("2. Clothing");
//             Console.WriteLine("3. Books");
//             Console.WriteLine("4. Home & Garden");
//             Console.Write("Enter choice (1-4): ");

//             int categoryChoice;
//             while (!int.TryParse(Console.ReadLine(), out categoryChoice) || categoryChoice < 1 || categoryChoice > 4)
//             {
//                 Console.Write("Invalid choice. Enter 1-4: ");
//             }

//             ProductCategory category = (ProductCategory)(categoryChoice - 1);

//             try
//             {
//                 Product newProduct = ProductFactory.CreateProduct(category, name, price, stock);
//                 products.Add(newProduct);
//                 logger.LogInfo($"New product added: {newProduct.Name}");
//                 Console.WriteLine("Product added successfully!");
//             }
//             catch (Exception ex)
//             {
//                 logger.LogError($"Failed to add product: {ex.Message}");
//                 Console.WriteLine("Failed to add product.");
//             }
//         }

//         public void CreateOrder()
//         {
//             Console.WriteLine("\n=== Create New Order ===");
//             Console.Write("Enter customer ID: ");
//             string customerId = Console.ReadLine();

//             Order order = new Order
//             {
//                 Id = nextOrderId.ToString(),
//                 CustomerId = customerId
//             };
//             nextOrderId++;

//             bool addingItems = true;
//             while (addingItems)
//             {
//                 ViewProducts();
//                 Console.Write("Select product number (or 0 to finish): ");
//                 int productChoice;
//                 if (!int.TryParse(Console.ReadLine(), out productChoice))
//                 {
//                     Console.WriteLine("Invalid input.");
//                     continue;
//                 }

//                 if (productChoice == 0)
//                 {
//                     addingItems = false;
//                     continue;
//                 }

//                 if (productChoice < 1 || productChoice > products.Count)
//                 {
//                     Console.WriteLine("Invalid product selection.");
//                     continue;
//                 }

//                 Product selectedProduct = products[productChoice - 1];
//                 Console.Write($"Enter quantity for {selectedProduct.Name}: ");
//                 int quantity;
//                 if (!int.TryParse(Console.ReadLine(), out quantity) || quantity <= 0)
//                 {
//                     Console.WriteLine("Invalid quantity.");
//                     continue;
//                 }

//                 if (quantity > selectedProduct.Stock)
//                 {
//                     Console.WriteLine($"Insufficient stock. Available: {selectedProduct.Stock}");
//                     continue;
//                 }

//                 OrderItem orderItem = new OrderItem
//                 {
//                     Product = selectedProduct,
//                     Quantity = quantity
//                 };

//                 order.Items.Add(orderItem);
//                 selectedProduct.Stock -= quantity;
//                 Console.WriteLine($"Added {quantity} x {selectedProduct.Name} to order.");
//             }

//             if (order.Items.Count > 0)
//             {
//                 orders.Add(order);
//                 logger.LogInfo($"Order created: {order.Id} for customer {order.CustomerId}");
//                 Console.WriteLine($"Order created successfully! Order ID: {order.Id}, Total: ${order.TotalAmount:F2}");
//             }
//             else
//             {
//                 Console.WriteLine("No items added to order.");
//             }
//         }

//         public void ProcessPayment()
//         {
//             Console.WriteLine("\n=== Process Payment ===");
//             if (orders.Count == 0)
//             {
//                 Console.WriteLine("No orders available for payment.");
//                 return;
//             }

//             Console.WriteLine("Available orders:");
//             for (int i = 0; i < orders.Count; i++)
//             {
//                 if (orders[i].Status == "Pending")
//                 {
//                     Console.WriteLine($"{i + 1}. Order ID: {orders[i].Id}, Amount: ${orders[i].TotalAmount:F2}");
//                 }
//             }

//             Console.Write("Select order number: ");
//             int orderChoice;
//             if (!int.TryParse(Console.ReadLine(), out orderChoice) || orderChoice < 1 || orderChoice > orders.Count)
//             {
//                 Console.WriteLine("Invalid order selection.");
//                 return;
//             }

//             Order selectedOrder = orders[orderChoice - 1];
//             if (selectedOrder.Status != "Pending")
//             {
//                 Console.WriteLine("Order has already been processed.");
//                 return;
//             }

//             Console.WriteLine("Select payment method:");
//             Console.WriteLine("1. Credit Card");
//             Console.WriteLine("2. PayPal");
//             Console.WriteLine("3. Bank Transfer");
//             Console.WriteLine("4. Cryptocurrency");
//             Console.Write("Enter choice (1-4): ");

//             int paymentChoice;
//             if (!int.TryParse(Console.ReadLine(), out paymentChoice) || paymentChoice < 1 || paymentChoice > 4)
//             {
//                 Console.WriteLine("Invalid payment method selection.");
//                 return;
//             }

//             IPaymentStrategy paymentStrategy = null;

//             switch (paymentChoice)
//             {
//                 case 1:
//                     Console.Write("Enter card number (16 digits): ");
//                     string cardNumber = Console.ReadLine();
//                     Console.Write("Enter expiry date (MM/YY): ");
//                     string expiry = Console.ReadLine();
//                     Console.Write("Enter CVV (3 digits): ");
//                     string cvv = Console.ReadLine();
//                     Console.Write("Enter cardholder name: ");
//                     string holderName = Console.ReadLine();
//                     paymentStrategy = new CreditCardPayment(cardNumber, expiry, cvv, holderName);
//                     selectedOrder.PaymentMethod = "Credit Card";
//                     break;
//                 case 2:
//                     Console.Write("Enter PayPal email: ");
//                     string email = Console.ReadLine();
//                     Console.Write("Enter PayPal password: ");
//                     string password = Console.ReadLine();
//                     paymentStrategy = new PayPalPayment(email, password);
//                     selectedOrder.PaymentMethod = "PayPal";
//                     break;
//                 case 3:
//                     Console.Write("Enter routing number (9 digits): ");
//                     string routing = Console.ReadLine();
//                     Console.Write("Enter account number: ");
//                     string account = Console.ReadLine();
//                     Console.Write("Enter bank name: ");
//                     string bankName = Console.ReadLine();
//                     paymentStrategy = new BankTransferPayment(routing, account, bankName);
//                     selectedOrder.PaymentMethod = "Bank Transfer";
//                     break;
//                 case 4:
//                     Console.Write("Enter wallet address: ");
//                     string walletAddress = Console.ReadLine();
//                     Console.Write("Enter cryptocurrency type: ");
//                     string cryptoType = Console.ReadLine();
//                     paymentStrategy = new CryptoPayment(walletAddress, cryptoType);
//                     selectedOrder.PaymentMethod = "Cryptocurrency";
//                     break;
//             }

//             paymentContext.SetPaymentStrategy(paymentStrategy);
//             PaymentResult result = paymentContext.ExecutePayment(selectedOrder.TotalAmount);

//             if (result.IsSuccessful)
//             {
//                 selectedOrder.Status = "Paid";
//                 logger.LogInfo($"Payment processed successfully for order {selectedOrder.Id}: {result.TransactionId}");
//                 Console.WriteLine($"Payment successful! Transaction ID: {result.TransactionId}");
//             }
//             else
//             {
//                 logger.LogError($"Payment failed for order {selectedOrder.Id}: {result.Message}");
//                 Console.WriteLine($"Payment failed: {result.Message}");
//             }
//         }

//         public void ViewOrders()
//         {
//             Console.WriteLine("\n=== Order History ===");
//             if (orders.Count == 0)
//             {
//                 Console.WriteLine("No orders found.");
//                 return;
//             }

//             for (int i = 0; i < orders.Count; i++)
//             {
//                 Order order = orders[i];
//                 Console.WriteLine($"Order ID: {order.Id}");
//                 Console.WriteLine($"Customer: {order.CustomerId}");
//                 Console.WriteLine($"Date: {order.OrderDate:yyyy-MM-dd HH:mm}");
//                 Console.WriteLine($"Status: {order.Status}");
//                 Console.WriteLine($"Payment Method: {order.PaymentMethod ?? "Not Set"}");
//                 Console.WriteLine($"Total Amount: ${order.TotalAmount:F2}");
//                 Console.WriteLine("Items:");
//                 for (int j = 0; j < order.Items.Count; j++)
//                 {
//                     OrderItem item = order.Items[j];
//                     Console.WriteLine($"  - {item.Product.Name} x{item.Quantity} = ${item.TotalPrice:F2}");
//                 }
//                 Console.WriteLine();
//             }
//         }

//         public void CheckInventory()
//         {
//             Console.WriteLine("\n=== Inventory Status ===");
//             if (products.Count == 0)
//             {
//                 Console.WriteLine("No products in inventory.");
//                 return;
//             }

//             for (int i = 0; i < products.Count; i++)
//             {
//                 Product product = products[i];
//                 string stockStatus = product.Stock <= 5 ? " (LOW STOCK)" : "";
//                 Console.WriteLine($"{product.Name} - Stock: {product.Stock}{stockStatus}");
//             }
//         }

//         public void ViewSystemLogs()
//         {
//             Console.WriteLine("\n=== System Logs ===");
//             Console.WriteLine("Recent system activity has been logged to console.");
//             logger.LogInfo("System logs accessed by user");
//         }

//         public void ManageConfiguration()
//         {
//             Console.WriteLine("\n=== Configuration Management ===");
//             Console.WriteLine("1. View Settings");
//             Console.WriteLine("2. Update Setting");
//             Console.Write("Enter choice (1-2): ");

//             int choice;
//             if (!int.TryParse(Console.ReadLine(), out choice))
//             {
//                 Console.WriteLine("Invalid choice.");
//                 return;
//             }

//             switch (choice)
//             {
//                 case 1:
//                     Console.WriteLine("\nCurrent Settings:");
//                     Console.WriteLine($"Database Connection: {config.GetSetting("DatabaseConnection")}");
//                     Console.WriteLine($"API Key: {config.GetSetting("APIKey")}");
//                     Console.WriteLine($"Max Order Items: {config.GetSetting("MaxOrderItems")}");
//                     Console.WriteLine($"Tax Rate: {config.GetSetting("TaxRate")}");
//                     break;
//                 case 2:
//                     Console.Write("Enter setting key: ");
//                     string key = Console.ReadLine();
//                     Console.Write("Enter new value: ");
//                     string value = Console.ReadLine();
//                     config.SetSetting(key, value);
//                     logger.LogInfo($"Configuration updated: {key} = {value}");
//                     Console.WriteLine("Setting updated successfully!");
//                     break;
//                 default:
//                     Console.WriteLine("Invalid choice.");
//                     break;
//             }
//         }

//         public void ShowMenu()
//         {
//             Console.WriteLine("\n=== E-Commerce Order Management System ===");
//             Console.WriteLine("1. View Products");
//             Console.WriteLine("2. Add New Product");
//             Console.WriteLine("3. Create Order");
//             Console.WriteLine("4. Process Payment");
//             Console.WriteLine("5. View Orders");
//             Console.WriteLine("6. Check Inventory");
//             Console.WriteLine("7. System Logs");
//             Console.WriteLine("8. Configuration");
//             Console.WriteLine("9. Exit");
//             Console.Write("Please select an option: ");
//         }

//         public void Run()
//         {
//             logger.LogInfo("E-Commerce system started");

//             while (true)
//             {
//                 ShowMenu();
//                 string input = Console.ReadLine();
//                 int choice;

//                 if (!int.TryParse(input, out choice))
//                 {
//                     Console.WriteLine("Invalid input. Please enter a number between 1 and 9.");
//                     continue;
//                 }

//                 switch (choice)
//                 {
//                     case 1:
//                         ViewProducts();
//                         break;
//                     case 2:
//                         AddNewProduct();
//                         break;
//                     case 3:
//                         CreateOrder();
//                         break;
//                     case 4:
//                         ProcessPayment();
//                         break;
//                     case 5:
//                         ViewOrders();
//                         break;
//                     case 6:
//                         CheckInventory();
//                         break;
//                     case 7:
//                         ViewSystemLogs();
//                         break;
//                     case 8:
//                         ManageConfiguration();
//                         break;
//                     case 9:
//                         logger.LogInfo("E-Commerce system shutdown");
//                         Console.WriteLine("Thank you for using E-Commerce Order Management System!");
//                         return;
//                     default:
//                         Console.WriteLine("Invalid choice. Please select a number between 1 and 9.");
//                         break;
//                 }

//                 Console.WriteLine("\nPress any key to continue...");
//                 Console.ReadKey();
//                 Console.Clear();
//             }
//         }
//     }

//     class Program
//     {
//         static void Main(string[] args)
//         {
//             ECommerceSystem system = new ECommerceSystem();
//             system.Run();
//         }
//     }
// }