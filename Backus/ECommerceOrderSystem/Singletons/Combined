// using System;
// using System.Collections.Concurrent;

// namespace ECommerceOrderSystem.Singletons
// {
//     public interface IConfigurationManager
//     {
//         string GetSetting(string key);
//         void SetSetting(string key, string value);
//     }

//     public interface ILogger
//     {
//         void LogInfo(string message);
//         void LogError(string message);
//         void LogWarning(string message);
//     }

//     public sealed class ConfigurationManager : IConfigurationManager
//     {
//         private static readonly object _lock = new object();
//         private static ConfigurationManager _instance = null;
//         private readonly ConcurrentDictionary<string, string> _settings;

//         private ConfigurationManager()
//         {
//             _settings = new ConcurrentDictionary<string, string>();
//             InitializeDefaultSettings();
//         }

//         public static ConfigurationManager Instance
//         {
//             get
//             {
//                 if (_instance == null)
//                 {
//                     lock (_lock)
//                     {
//                         if (_instance == null)
//                             _instance = new ConfigurationManager();
//                     }
//                 }
//                 return _instance;
//             }
//         }

//         private void InitializeDefaultSettings()
//         {
//             _settings["DatabaseConnection"] = "Server=localhost;Database=ECommerce;";
//             _settings["ApiKey"] = "your-api-key-here";
//             _settings["MaxOrderItems"] = "10";
//             _settings["Currency"] = "USD";
//         }

//         public string GetSetting(string key)
//         {
//             return _settings.TryGetValue(key, out string value) ? value : null;
//         }

//         public void SetSetting(string key, string value)
//         {
//             _settings.AddOrUpdate(key, value, (k, v) => value);
//         }
//     }

//     public sealed class Logger : ILogger
//     {
//         private static readonly object _lock = new object();
//         private static Logger _instance = null;

//         private Logger() { }

//         public static Logger Instance
//         {
//             get
//             {
//                 if (_instance == null)
//                 {
//                     lock (_lock)
//                     {
//                         if (_instance == null)
//                             _instance = new Logger();
//                     }
//                 }
//                 return _instance;
//             }
//         }

//         public void LogInfo(string message)
//         {
//             WriteLog("INFO", message);
//         }

//         public void LogError(string message)
//         {
//             WriteLog("ERROR", message);
//         }

//         public void LogWarning(string message)
//         {
//             WriteLog("WARNING", message);
//         }

//         private void WriteLog(string level, string message)
//         {
//             lock (_lock)
//             {
//                 Console.WriteLine($"[{DateTime.Now:yyyy-MM-dd HH:mm:ss}] [{level}] {message}");
//             }
//         }
//     }
// }